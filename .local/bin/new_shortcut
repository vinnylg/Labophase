#!/bin/bash
# ~/.local/bin/new_shortcut (vers√£o corrigida)

echo "üõ†Ô∏è  GNOME Custom Shortcut Manager"

# Fun√ß√£o para verificar conflitos em todos os atalhos
check_key_conflict() {
    local key_binding=$1
    
    # Verificar em custom-keybindings (com path completo)
    conflict_custom=$(gsettings get org.gnome.settings-daemon.plugins.media-keys custom-keybindings | \
        tr -d "[]'," | xargs -n1 | while read path; do
            [ -n "$path" ] && gsettings get "$path" binding | grep -Fxq "'$key_binding'" && \
            echo "$path:$(gsettings get "$path" name):$key_binding"
        done | grep -v "$dir_name")
    
    # Verificar em atalhos padr√£o do sistema
    conflict_system=$(gsettings list-recursively org.gnome.settings-daemon.plugins.media-keys | \
        grep -v "custom-keybindings" | grep -F "'$key_binding'")
    
    if [ -n "$conflict_custom" ] || [ -n "$conflict_system" ]; then
        echo -e "\n‚ö†Ô∏è  Conflito encontrado:"
        
        if [ -n "$conflict_custom" ]; then
            echo "   Atalhos personalizados:"
            echo "$conflict_custom" | awk -F: '{printf "   %s (%s) -> %s\n", $3, $2, $1}'
        fi
        
        if [ -n "$conflict_system" ]; then
            echo "   Atalhos do sistema:"
            echo "$conflict_system" | awk -F"'" '{print "   " $4 " -> " $2}'
        fi
        
        return 1
    fi
    
    return 0
}

# Fun√ß√£o para mostrar configura√ß√£o atual formatada
show_current_settings() {
    local full_path="/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/$dir_name/"
    echo -e "\nConfigura√ß√£o atual do atalho '$dir_name':"
    echo "Nome: $(gsettings get "org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:$full_path" name | sed "s/'//g")"
    echo "Comando: $(gsettings get "org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:$full_path" command | sed "s/'//g")"
    echo "Teclas: $(gsettings get "org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:$full_path" binding | sed "s/'//g")"
    echo
}

# 1. Obter nome do diret√≥rio
while true; do
    read -p "1. Nome √∫nico do atalho (sem espa√ßos, ex: MeuAtalho): " dir_name
    dir_name=$(echo "$dir_name" | tr ' ' '_')
    
    [ -z "$dir_name" ] && { echo "‚ùå Erro: Nome n√£o pode ser vazio"; continue; }
    [[ "$dir_name" =~ [^a-zA-Z0-9_-] ]] && { echo "‚ùå Erro: Use apenas letras, n√∫meros, h√≠fens ou underscores"; continue; }
    break
done

# Verificar se j√° existe
current_keys=$(gsettings get org.gnome.settings-daemon.plugins.media-keys custom-keybindings)
if [[ "$current_keys" == *"'/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/$dir_name/'"* ]]; then
    echo -e "\n‚ö†Ô∏è  Atalho '$dir_name' j√° existe!"
    show_current_settings
    
    read -p "Deseja modificar? (s/n): " edit_choice
    [[ "$edit_choice" =~ ^[Ss]$ ]] || { echo "‚ùå Opera√ß√£o cancelada."; exit 0; }
    
    full_path="/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/$dir_name/"
    current_name=$(gsettings get "org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:$full_path" name | sed "s/'//g")
    current_cmd=$(gsettings get "org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:$full_path" command | sed "s/'//g")
    current_binding=$(gsettings get "org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:$full_path" binding | sed "s/'//g")
    is_existing=true
else
    is_existing=false
fi

# 2. Obter nome descritivo
while true; do
    if $is_existing; then
        read -p "2. Nome descritivo [atual: $current_name]: " app_name
        app_name=${app_name:-$current_name}
    else
        read -p "2. Nome descritivo (ex: 'Abrir Terminal'): " app_name
    fi
    
    [ -z "$app_name" ] && { echo "‚ùå Erro: Nome n√£o pode ser vazio"; continue; }
    break
done

# 3. Obter comando
while true; do
    if $is_existing; then
        read -p "3. Comando completo [atual: $current_cmd]: " command
        command=${command:-$current_cmd}
    else
        read -p "3. Comando completo: " command
    fi
    
    [ -z "$command" ] && { echo "‚ùå Erro: Comando n√£o pode ser vazio"; continue; }
    break
done

# 4. Configurar tecla de atalho
while true; do
    if $is_existing; then
        read -p "4. Tecla de atalho [atual: $current_binding]: " key_binding
        key_binding=${key_binding:-$current_binding}
    else
        read -p "4. Tecla de atalho (ex: <Super>d): " key_binding
    fi
    
    [ -z "$key_binding" ] && { echo "‚ùå Erro: Atalho n√£o pode ser vazio"; continue; }
    
    # Verificar conflitos
    if ! check_key_conflict "$key_binding"; then
        read -p "   Deseja usar mesmo assim? (s/n): " force_choice
        [[ "$force_choice" =~ ^[Ss]$ ]] && break || continue
    else
        break
    fi
done

# Confirmar
echo -e "\nüîç Resumo:"
echo "   Nome do atalho: $dir_name"
echo "   Nome descritivo: $app_name"
echo "   Comando: $command"
echo "   Teclas: $key_binding"
read -p "Confirmar? (s/n): " confirm

if [[ "$confirm" =~ ^[Ss]$ ]]; then
    # Adicionar √† lista de keybindings (se for novo)
    if ! $is_existing; then
        new_list="${current_keys%]*}, '/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/$dir_name/']"
        gsettings set org.gnome.settings-daemon.plugins.media-keys custom-keybindings "$new_list"
    fi
    
    # Criar/atualizar o shortcut (usando path completo)
    full_path="/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/$dir_name/"
    gsettings set "org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:$full_path" name "$app_name"
    gsettings set "org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:$full_path" command "$command"
    gsettings set "org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:$full_path" binding "$key_binding"
    
    echo -e "\n‚úÖ Atalho '$dir_name' configurado com sucesso!"
    echo "   Voc√™ pode editar manualmente com:"
    echo "   dconf editor ‚Üí /org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/$dir_name/"
else
    echo "‚ùå Opera√ß√£o cancelada."
fi